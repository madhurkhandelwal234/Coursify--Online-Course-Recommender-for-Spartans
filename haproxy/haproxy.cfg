global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    maxconn 2000
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    retries 3
    option redispatch
    timeout connect  5000
    timeout client  10000
    timeout server  10000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
    bind *:80
    stats enable
    stats uri /haproxy?stats
    stats realm Strictly\ Private
    stats auth shafidayatar:shafidayatar
    stats auth testing:testcompleted
    
    acl pre_req path_beg -i /prerequisite
    acl flask path_beg -i /flask

    use_backend prereq_server if pre_req
    use_backend flask_server  if flask

    backend prereq_server
       balance roundrobin
       server prereq1 prereq-service-f5cab6bd-1.26ec70d6.cont.dockerapp.io:5000 check

    backend flask_server
       balance roundrobin
       server python-app1 ec2-35-165-131-213.us-west-2.compute.amazonaws.com:5992 check
       server python-app2 ec2-35-165-109-248.us-west-2.compute.amazonaws.com:5992 check



listen redis-cluster
    bind *:8000
    server redis1 localhost:6379 check